[gcode_macro PURGE_LINE]
gcode:
    {% set hotend = params.HOTEND|int %}

    G90                            ; absolute positioning

    G1 X30 Y0 Z0.4 F30000          ; move to purge start
    G1 X30 Y-5 Z0.4 F30000
    M104 S{hotend}                 ; set and wait for hotend temp
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={hotend}

    G91                            ; relative positioning
    G1 E16 F200                    ; purge blob
    G1 X175 E39 F3600              ; first line
    G1 Y0.8                        ; move slightly
    G1 X-40 E8 F3600               ; second line
    G1 Y4.2 F30000                 ; move to printing zone
    G92 E0                         ; zero the extruder
    
    G90                            ; absolute positioning

[gcode_macro PRINT_START]
gcode:
    {% set bed = params.BED|int %}
    {% set hotend = params.HOTEND|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}

    #SET_VELOCITY_LIMIT VELOCITY=500 ACCEL=15000
    M204 S15000

    CANCEL_COOLDOWN
    HEATSOAK BED={bed} HOTEND=150 CHAMBER={chamber} WAIT=1

    M117 Calibrating
    BED_MESH_CLEAR
    G28
    Z_TILT_ADJUST

    BED_MESH_CALIBRATE
    G28 Z METHOD=CONTACT CALIBRATE=1 ; calibrate via nozzle contact
    SET_GCODE_OFFSET Z=0.6
    SKEW_PROFILE LOAD=Califlower

    M106 S0

    ; Wait for hotend to reach target temperature
    M109 S{hotend}

    M117 Purging
    LINE_PURGE
    #PURGE_LINE HOTEND={hotend}
    #_BEACON_SET_NOZZLE_TEMP_OFFSET 

    M117 Printing
   
[gcode_macro PRINT_END]
gcode:
    M117 Done
    
    SET_SKEW CLEAR=1
    COOLDOWN
    BED_MESH_CLEAR

    M400                           ; wait for buffer to clear
    G91                            ; relative positioning

    G1 E-5.0 F3600                 ; retract filament

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 50) %}
        {% set z_safe = 50.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 X{x_safe} Y{y_safe} Z{z_safe} F24000  ; move nozzle to remove stringing
    
    #_BEACON_REMOVE_NOZZLE_TEMP_OFFSET
    #_BEACON_SET_NOZZLE_TEMP_OFFSET RESET=True
    SET_GCODE_OFFSET Z=0
    TURN_OFF_HEATERS
    PARK_NOZZLE

    G1 E-12.0 F3600

    G92 E0                         ; zero the extruder
    M107                           ; turn off fan

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SET_SKEW CLEAR=1
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    PRINT_END

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        G90                                                                                  ; absolute positioning
        PARK_NOZZLE                                                                          ; park toolhead at purge bucket
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}
    
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_etemp: 0
variable_m600: 0
gcode:
    {% if printer['pause_resume'].is_paused|int == 1 %}
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}

        {% if m600 > 0 %}
            LOAD_FILAMENT                                                            ; load filament if pause was from M600
            PARK_NOZZLE                                                              ; go to purge bucket
            M83                                                                      ; purge filament
            G1 E25 F300
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600 VALUE=0
        {% endif %}

        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=500                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=500                         ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro PREHEAT]
description: Preheat
gcode:
    {% set hotend = params.HOTEND|default(0)|int %}
    {% set bed = params.BED|default(0)|int %}
    {% set chamber = params.CHAMBER|default(0)|int %}

    M104 S{hotend}
    M140 S{bed}
    M141 S{chamber}
    M106 S255

[gcode_macro M600]
gcode:
    SAVE_GCODE_STATE NAME=M600
    UNLOAD_FILAMENT
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=m600 VALUE=1
    PAUSE
    RESTORE_GCODE_STATE NAME=M600